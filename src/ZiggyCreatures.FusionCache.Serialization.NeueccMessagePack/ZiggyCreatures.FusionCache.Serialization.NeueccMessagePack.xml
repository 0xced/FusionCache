<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack</name>
    </assembly>
    <members>
        <member name="T:ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.FusionCacheNeueccMessagePackSerializer">
            <summary>
            An implementation of <see cref="T:ZiggyCreatures.Caching.Fusion.Serialization.IFusionCacheSerializer"/> which uses Neuecc's famous MessagePack serializer.
            </summary>
        </member>
        <member name="M:ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.FusionCacheNeueccMessagePackSerializer.#ctor(MessagePack.MessagePackSerializerOptions)">
            <summary>
            Create a new instance of a <see cref="T:ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.FusionCacheNeueccMessagePackSerializer"/> object.
            </summary>
            <param name="options">The <see cref="T:MessagePack.MessagePackSerializerOptions"/> to use: if not specified, the contract-less (<see cref="T:MessagePack.Resolvers.ContractlessStandardResolver"/>) options will be used.</param>
        </member>
        <member name="M:ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.FusionCacheNeueccMessagePackSerializer.Serialize``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.FusionCacheNeueccMessagePackSerializer.Deserialize``1(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.FusionCacheNeueccMessagePackSerializer.SerializeAsync``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.FusionCacheNeueccMessagePackSerializer.DeserializeAsync``1(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.FusionCacheNeueccMessagePackSerializerServiceCollectionExtensions">
            <summary>
            Extension methods for setting up fusion cache related services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.FusionCacheNeueccMessagePackSerializerServiceCollectionExtensions.AddFusionCacheNeueccMessagePackSerializer(Microsoft.Extensions.DependencyInjection.IServiceCollection,MessagePack.MessagePackSerializerOptions)">
            <summary>
            Adds an implementation of <see cref="T:ZiggyCreatures.Caching.Fusion.Serialization.IFusionCacheSerializer"/> based on the famous Neuecc's MessagePack one.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <param name="options">The <see cref="T:MessagePack.MessagePackSerializerOptions"/> to use: if not specified, the contract-less (<see cref="T:MessagePack.Resolvers.ContractlessStandardResolver"/>) options will be used.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.</returns>
        </member>
    </members>
</doc>
